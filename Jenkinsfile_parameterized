#!groovy
@Library("Infrastructure") _

properties([
  parameters([
    choice(name: 'ENVIRONMENT', choices: 'saat\nsprod\nsandbox', description: 'Environment where code should be build and deployed')
  ]),
  pipelineTriggers([[$class: 'GitHubPushTrigger']])
])

List<LinkedHashMap<String, Object>> secrets = [
    secret('ccd-importer-autotest-email', 'CCD_IMPORT_AUTOTEST_EMAIL'),
    secret('ccd-importer-autotest-password', 'CCD_IMPORT_AUTOTEST_PASSWORD'),
    secret('ccd-caseworker-autotest-email', 'CCD_CASEWORKER_AUTOTEST_EMAIL'),
    secret('ccd-caseworker-autotest-password', 'CCD_CASEWORKER_AUTOTEST_PASSWORD'),
    secret('ccd-api-gateway-s2s-secret', 'CCD_GW_SERVICE_SECRET'),
    secret('ccd-api-gateway-oauth2-client-secret', 'OAUTH2_CLIENT_SECRET'),
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [
        $class: 'AzureKeyVaultSecret',
        secretType: 'Secret',
        name: secretName,
        version: '',
        envVariable: envVar
    ]
}

// from PR-20 withParameterizedPipeline('java', 'ccd', 'definition-store-api', params.ENVIRONMENT, 'sandbox') {
// from master withParameterizedPipeline(params.TYPE, params.PRODUCT_NAME, params.APP, params.ENVIRONMENT, params.SUBSCRIPTION) {
withParameterizedPipeline('java', 'ccd', 'definition-store-api', params.ENVIRONMENT, 'sandbox') {
    enableSlackNotifications('#ccd-param-builds')
    enableDbMigration()
    loadVaultSecrets(secrets)
}
