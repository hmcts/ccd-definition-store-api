<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">

    <changeSet id="rdm-2917" author="fatih.ozceylan@hmcts.net">

        <!-- case_role table changes to role-->
        <!-- clone table structure to the new role table -->
        <sql>
            create table role (like case_role including all);
        </sql>
        <!-- Add foreign key for case_type_id column linking to case_type table -->
        <addForeignKeyConstraint baseColumnNames="case_type_id"
                                 baseTableName="role"
                                 constraintName="role_case_type_id_case_type_id_fk"
                                 referencedColumnNames="id"
                                 referencedTableName="case_type"/>


        <!-- Change precision of reference, name and description columns in role table -->
        <modifyDataType columnName="reference" newDataType="varchar(255)" tableName="role"/>
        <modifyDataType columnName="name" newDataType="varchar(255)" tableName="role"/>
        <modifyDataType columnName="description" newDataType="varchar(255)" tableName="role"/>

        <!-- Add new security_classification, user_role_id and dtype fields to the role table -->
        <addColumn tableName="role">
            <column name="user_role_id" type="integer" >
                <constraints nullable="true"/>
            </column>
            <column name="security_classification" type="security_classification" defaultValue="PUBLIC">
                <constraints nullable="true"/>
            </column>
            <column name="dtype" type="varchar(10)" />
        </addColumn>

        <!-- Add not null constraint for security_classification column in role table-->
        <addNotNullConstraint columnDataType="security_classification"
                              columnName="security_classification"
                              defaultNullValue="PUBLIC"
                              tableName="role"/>

        <!-- Add check constraint 'case_type_id is not null when role entity type is case role' -->
        <sql>
            ALTER TABLE role
                ADD CONSTRAINT case_type_id_check
            CHECK (
                CASE WHEN dtype = 'CASEROLE'
                THEN
                    CASE WHEN case_type_id IS NOT NULL
                    THEN 1
                    ELSE 0
                    END
                ELSE 1
                END = 1
            );
        </sql>


        <!-- case_field_user_role table changes -->
        <!-- clone table structure to the new case_field_acl table -->
        <sql>
            create table case_field_acl (like case_field_user_role including all);
        </sql>

        <!-- Add foreign key for case_field_id column linking to case_field table -->
        <addForeignKeyConstraint baseColumnNames="case_field_id"
                                 baseTableName="case_field_acl"
                                 constraintName="case_field_acl_case_field_id_case_field_id_fk"
                                 referencedColumnNames="id"
                                 referencedTableName="case_field"/>

        <!-- Add foreign key for user_role_id column linking to user_role table -->
        <addForeignKeyConstraint baseColumnNames="user_role_id"
                                 baseTableName="case_field_acl"
                                 constraintName="case_field_acl_user_role_id_user_role_id_fk"
                                 referencedColumnNames="id"
                                 referencedTableName="user_role"/>

        <!-- copy table data to the new case_field_acl table -->
        <sql>
            insert into case_field_acl select * from case_field_user_role;
        </sql>

        <!-- Add new role_id column to the case_field_acl table -->
        <addColumn tableName="case_field_acl">
            <column name="role_id" type="integer" >
                <constraints nullable="true"/>
            </column>
        </addColumn>

        <!-- Add foreign key for role_id column linking to role table -->
        <addForeignKeyConstraint baseColumnNames="role_id"
                                 baseTableName="case_field_acl"
                                 constraintName="case_field_acl_role_id_role_id_fk"
                                 referencedColumnNames="id"
                                 referencedTableName="role"/>

        <!-- Add unique constraint on case_field_id and role_id columns for the case_field_acl table -->
        <addUniqueConstraint columnNames="case_field_id, role_id"
                             constraintName="unique_case_field_user_role_case_field_id_role_id"
                             tableName="case_field_acl"/>

        <!-- Drop not null constraint for user_role_id column in case_field_acl table-->
        <dropNotNullConstraint tableName="case_field_acl" columnName="user_role_id"/>


        <!-- case_type_user_role table changes -->
        <!-- clone table structure to the new case_type_acl table -->
        <sql>
            create table case_type_acl (like case_type_user_role including all);
        </sql>

        <!-- Add foreign key for case_type_id column linking to case_type table -->
        <addForeignKeyConstraint baseColumnNames="case_type_id"
                                 baseTableName="case_type_acl"
                                 constraintName="case_type_acl_case_type_id_case_type_id_fk"
                                 referencedColumnNames="id"
                                 referencedTableName="case_type"/>

        <!-- Add foreign key for user_role_id column linking to user_role table -->
        <addForeignKeyConstraint baseColumnNames="user_role_id"
                                 baseTableName="case_type_acl"
                                 constraintName="case_type_acl_user_role_id_user_role_id_fk"
                                 referencedColumnNames="id"
                                 referencedTableName="user_role"/>

        <!-- copy table data to the new case_type_acl table -->
        <sql>
            insert into case_type_acl select * from case_type_user_role;
        </sql>

        <!-- Add new role_id column to the case_type_acl table -->
        <addColumn tableName="case_type_acl">
            <column name="role_id" type="integer" >
                <constraints nullable="true"/>
            </column>
        </addColumn>

        <!-- Add foreign key for role_id column linking to role table -->
        <addForeignKeyConstraint baseColumnNames="role_id"
                                 baseTableName="case_type_acl"
                                 constraintName="case_type_acl_role_id_role_id_fk"
                                 referencedColumnNames="id"
                                 referencedTableName="role"/>

        <!-- Add unique constraint on case_type_id and role_id columns for the case_type_acl table -->
        <addUniqueConstraint columnNames="case_type_id, role_id"
                             constraintName="unique_case_type_user_role_case_type_id_role_id"
                             tableName="case_type_acl"/>

        <!-- Drop not null constraint for user_role_id column in case_type_acl table-->
        <dropNotNullConstraint tableName="case_type_acl" columnName="user_role_id"/>


        <!-- event_user_role table changes -->
        <!-- clone table structure to the new event_acl table -->
        <sql>
            create table event_acl (like event_user_role including all);
        </sql>

        <!-- Add foreign key for event_id column linking to event table -->
        <addForeignKeyConstraint baseColumnNames="event_id"
                                 baseTableName="event_acl"
                                 constraintName="event_acl_event_id_event_id_fk"
                                 referencedColumnNames="id"
                                 referencedTableName="event"/>

        <!-- Add foreign key for user_role_id column linking to user_role table -->
        <addForeignKeyConstraint baseColumnNames="user_role_id"
                                 baseTableName="event_acl"
                                 constraintName="event_acl_user_role_id_user_role_id_fk"
                                 referencedColumnNames="id"
                                 referencedTableName="user_role"/>

        <!-- copy table data to the new event_acl table -->
        <sql>
            insert into event_acl select * from event_user_role;
        </sql>

        <!-- Add new role_id column to the event_acl table -->
        <addColumn tableName="event_acl">
            <column name="role_id" type="integer" >
                <constraints nullable="true"/>
            </column>
        </addColumn>

        <!-- Add foreign key for role_id column linking to role table -->
        <addForeignKeyConstraint baseColumnNames="role_id"
                                 baseTableName="event_acl"
                                 constraintName="event_acl_role_id_role_id_fk"
                                 referencedColumnNames="id"
                                 referencedTableName="role"/>

        <!-- Add unique constraint on event_id and role_id columns for the event_acl table -->
        <addUniqueConstraint columnNames="event_id, role_id"
                             constraintName="unique_event_user_role_event_id_role_id"
                             tableName="event_acl"/>

        <!-- Drop not null constraint for user_role_id column in event_acl table-->
        <dropNotNullConstraint tableName="event_acl" columnName="user_role_id"/>


        <!-- state_user_role table changes -->
        <!-- clone table structure to the new state_acl table -->
        <sql>
            create table state_acl (like state_user_role including all);
        </sql>

        <!-- Add foreign key for state_id column linking to state table -->
        <addForeignKeyConstraint baseColumnNames="state_id"
                                 baseTableName="state_acl"
                                 constraintName="state_acl_state_id_state_id_fk"
                                 referencedColumnNames="id"
                                 referencedTableName="state"/>

        <!-- Add foreign key for user_role_id column linking to user_role table -->
        <addForeignKeyConstraint baseColumnNames="user_role_id"
                                 baseTableName="state_acl"
                                 constraintName="state_acl_user_role_id_user_role_id_fk"
                                 referencedColumnNames="id"
                                 referencedTableName="user_role"/>

        <!-- copy table data to the new state_acl table -->
        <sql>
            insert into state_acl select * from state_user_role;
        </sql>

        <!-- Add new role_id column to the state_acl table -->
        <addColumn tableName="state_acl">
            <column name="role_id" type="integer" >
                <constraints nullable="true"/>
            </column>
        </addColumn>

        <!-- Add foreign key for role_id column linking to role table -->
        <addForeignKeyConstraint baseColumnNames="role_id"
                                 baseTableName="state_acl"
                                 constraintName="state_acl_role_id_role_id_fk"
                                 referencedColumnNames="id"
                                 referencedTableName="role"/>

        <!-- Add unique constraint on state_id and role_id columns for the state_acl table -->
        <addUniqueConstraint columnNames="state_id, role_id"
                             constraintName="unique_state_user_role_state_id_role_id"
                             tableName="state_acl"/>

        <!-- Drop not null constraint for user_role_id column in state_acl table-->
        <dropNotNullConstraint tableName="state_acl" columnName="user_role_id"/>


        <!-- MIGRATE the DATA & tighten the rules -->
        <!-- Pull in the user_roles into role table -->
        <sql>
            INSERT INTO role (user_role_id, reference, name, description, security_classification, dtype)
            SELECT id as user_role_id, "role" AS reference, "role" AS name, "role" AS description, security_classification, 'USERROLE' FROM user_role;
        </sql>
        <!-- Pull in the role_id into case_field_acl table -->
        <sql>
            Update case_field_acl cfa
            set role_id = (SELECT cr.id id FROM role cr where cr.user_role_id = cfa.user_role_id )
            WHERE exists (SELECT 1  from role cr where cr.user_role_id = cfa.user_role_id);
        </sql>
        <!-- Add not null constraint for role_id column in case_field_acl table-->
        <addNotNullConstraint columnDataType="integer" columnName="role_id" tableName="case_field_acl"/>

        <!-- Pull in the role_id into case_type_acl table -->
        <sql>
            Update case_type_acl cta
            set role_id = (SELECT cr.id id FROM role cr where cr.user_role_id = cta.user_role_id )
            WHERE exists (SELECT 1  from role cr where cr.user_role_id = cta.user_role_id);
        </sql>
        <!-- Add not null constraint for role_id column in case_type_acl table-->
        <addNotNullConstraint columnDataType="integer" columnName="role_id" tableName="case_type_acl"/>

        <!-- Pull in the role_id into event_acl table -->
        <sql>
            Update event_acl ea
            set role_id = (SELECT cr.id id FROM role cr where cr.user_role_id = ea.user_role_id )
            WHERE exists (SELECT 1  from role cr where cr.user_role_id = ea.user_role_id);
        </sql>
        <!-- Add not null constraint for role_id column in event_acl table-->
        <addNotNullConstraint columnDataType="integer" columnName="role_id" tableName="event_acl"/>

        <!-- Pull in the role_id into state_acl table -->
        <sql>
            Update state_acl sa
            set role_id = (SELECT cr.id id FROM role cr where cr.user_role_id = sa.user_role_id )
            WHERE exists (SELECT 1  from role cr where cr.user_role_id = sa.user_role_id);
        </sql>
        <!-- Add not null constraint for role_id column in state_acl table-->
        <addNotNullConstraint columnDataType="integer" columnName="role_id" tableName="state_acl"/>
    </changeSet>
</databaseChangeLog>
