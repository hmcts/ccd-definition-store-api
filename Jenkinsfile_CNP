#!groovy

@Library("Infrastructure")

def type = "java"

def product = "ccd"

def app = "definition-store-api"

def secrets = [
    'ccd-${env}': [
        secret('ccd-importer-autotest-email', 'CCD_IMPORT_AUTOTEST_EMAIL'),
        secret('ccd-importer-autotest-password', 'CCD_IMPORT_AUTOTEST_PASSWORD'),
        secret('ccd-caseworker-autotest-email', 'CCD_CASEWORKER_AUTOTEST_EMAIL'),
        secret('ccd-caseworker-autotest-password', 'CCD_CASEWORKER_AUTOTEST_PASSWORD'),
        secret('ccd-api-gateway-oauth2-client-secret', 'OAUTH2_CLIENT_SECRET'),
    ],
    's2s-${env}': [
        secret('microservicekey-ccd-gw', 'CCD_GW_SERVICE_SECRET')
    ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [
        $class: 'AzureKeyVaultSecret',
        secretType: 'Secret',
        name: secretName,
        version: '',
        envVariable: envVar
    ]
}

def vaultOverrides = [
    'preview': 'aat',
    'spreview': 'saat'
]


withPipeline(type, product, app) {
    // Vars needed for functional and smoke tests run against AKS
    env.OAUTH2_CLIENT_ID = "ccd_gateway"
    env.OAUTH2_REDIRECT_URI = "https://www-ccd.nonprod.platform.hmcts.net/oauth2redirect"
    env.IDAM_URL = "https://idam-api.aat.platform.hmcts.net"
    env.S2S_URL = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
    env.CCD_GW_SERVICE_NAME = "ccd_gw"
    onMaster {
        enableSlackNotifications('#ccd-master-builds')
    }
    onDemo {
        enableSlackNotifications('#ccd-demo-builds')
    }
    onPR {
        enableSlackNotifications('#ccd-pr-builds')
    }

    enableDbMigration('ccd')
    overrideVaultEnvironments(vaultOverrides)
    loadVaultSecrets(secrets)
    enableAksStagingDeployment()
    disableLegacyDeploymentOnAAT()
    disableLegacyDeployment()
    installCharts()
}
