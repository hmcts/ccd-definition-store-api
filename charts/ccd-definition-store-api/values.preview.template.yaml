java:
  image: ${IMAGE_NAME}
  ingressHost: ${SERVICE_FQDN}
  devmemoryRequests: 2048Mi
  devcpuRequests: 2000m
  devmemoryLimits: 4096Mi
  devcpuLimits: 4000m
  keyVaults:
    ccd:
      secrets:
        - name: ccd-definition-s2s-secret
          alias: DEFINITION_STORE_IDAM_KEY
  environment:
    DEFINITION_STORE_DB_HOST: "{{ .Release.Name }}-postgresql"
    DEFINITION_STORE_DB_NAME: "definition-store"
    DEFINITION_STORE_DB_USERNAME: "{{ .Values.postgresql.auth.username}}"
    DEFINITION_STORE_DB_PASSWORD: "{{ .Values.postgresql.auth.password}}"
    DEFINITION_STORE_DB_OPTIONS: ""
    DEFINITION_STORE_DB_MAX_POOL_SIZE: 5
    ELASTIC_SEARCH_FAIL_ON_IMPORT: true
    LOG_LEVEL_ROOT: DEBUG
    AZURE_STORAGE_DEFINITION_UPLOAD_ENABLED: false

    # enable whenever required and provide host url to match with corresponding data-store-api
    ELASTIC_SEARCH_ENABLED: true
    ELASTIC_SEARCH_HOST: "{{ .Release.Name }}-es-master"
    USER_PROFILE_HOST: http://${SERVICE_NAME}-ccd-user-profile-api
    TS_TRANSLATION_SERVICE_HOST: https://ts-translation-service-pr-226.preview.platform.hmcts.net

    # ccd-test app-insights key - remove once testing is done
    APPINSIGHTS_INSTRUMENTATIONKEY: 2dcb834e-768e-4429-9050-ab15af959995


  postgresql:
    enabled: true
    primary:
      initdb:
        scripts:
          init.sql: |
            CREATE DATABASE "data-store" WITH OWNER = javapostgres ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
            CREATE DATABASE "definition-store" WITH OWNER = javapostgres ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
            CREATE DATABASE "user-profile" WITH OWNER = javapostgres ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
            CREATE DATABASE "role_assignment" WITH OWNER = javapostgres ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
            CREATE DATABASE "ts_translation_service" WITH OWNER = javapostgres ENCODING = 'UTF-8' CONNECTION LIMIT = -1;

ccd:
  enabled: true
  ccd:
    s2s:
      enabled: false
    dataStore:
      enabled: false
    adminWeb:
      enabled: false
    definitionImporter:
      enabled: false
    userProfileImporter:
      enabled: false
    apiGatewayWeb:
      enabled: false
    ras:
      enabled: false
    elastic:
      enabled: false
    postgresql:
      enabled: false

  ingressHost: ${SERVICE_FQDN}

  global:
    ccdDefinitionStoreUrl: http://${SERVICE_NAME}-ccd-definition-store
    ccdUserProfileUrl: http://${SERVICE_NAME}-ccd-user-profile-api
    dmStoreUrl: http://dm-store-aat.service.core-compute-aat.internal
    idamApiUrl: https://idam-api.aat.platform.hmcts.net
    idamWebUrl: https://idam-web-public.aat.platform.hmcts.net
    s2sUrl: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
    enableKeyVaults: true
    devMode: true

  ccd-user-profile-api:
    java:
      ingressHost: ccd-user-profile-api-${SERVICE_FQDN}
      image: hmctspublic.azurecr.io/ccd/user-profile-api:latest
      imagePullPolicy: Always
      environment:
        USER_PROFILE_DB_HOST: "{{ .Release.Name }}-postgresql"
        USER_PROFILE_DB_USERNAME: "{{ .Values.postgresql.auth.username}}"
        USER_PROFILE_DB_PASSWORD: "{{ .Values.postgresql.auth.password}}"
        USER_PROFILE_DB_OPTIONS: ""
      secrets:
        USER_PROFILE_DB_PASSWORD:
          secretRef: "{{ .Values.global.postgresSecret }}"
          key: PASSWORD
          disabled: true