#!groovy

properties([
    // H allow predefined but random minute see https://en.wikipedia.org/wiki/Cron#Non-standard_characters
    pipelineTriggers([cron('H 05 * * *')])
])

@Library("Infrastructure")

def type = "java"
def product = "ccd"
def component = "definition-store-api"

def secrets = [
    'ccd-${env}': [
        secret('ccd-caseworker-autotest-email', 'CCD_CASEWORKER_AUTOTEST_EMAIL'),
        secret('ccd-caseworker-autotest-password', 'CCD_CASEWORKER_AUTOTEST_PASSWORD'),
        secret('ccd-befta-caseworker-3-pwd', 'CCD_BEFTA_CASEWORKER_3_PWD'),
        secret('ccd-befta-master-caseworker-pwd', 'CCD_BEFTA_MASTER_CASEWORKER_PWD'),

        secret('ccd-api-gateway-oauth2-client-secret', 'CCD_API_GATEWAY_OAUTH2_CLIENT_SECRET'),
        secret('definition-importer-username', 'DEFINITION_IMPORTER_USERNAME'),
        secret('definition-importer-password', 'DEFINITION_IMPORTER_PASSWORD')
    ],
    's2s-${env}': [
        secret('microservicekey-ccd-gw', 'CCD_API_GATEWAY_S2S_KEY'),
        secret('microservicekey-ccd-gw', 'BEFTA_S2S_CLIENT_SECRET')
    ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [
        $class: 'AzureKeyVaultSecret',
        secretType: 'Secret',
        name: secretName,
        version: '',
        envVariable: envVar
    ]
}

def vaultOverrides = [
    'preview': 'aat',
    'spreview': 'saat'
]

// Vars needed for AKS functional and smoke tests
env.TEST_URL = "http://ccd-definition-store-api-aat.service.core-compute-aat.internal"
env.BEFTA_S2S_CLIENT_ID = "ccd_gw"
env.CCD_CASEWORKER_AUTOTEST_EMAIL = "auto.test.cnp@gmail.com"
env.BEFTA_RESPONSE_HEADER_CHECK_POLICY="JUST_WARN"
env.CCD_STUB_SERVICE_URI_BASE="ccd-test-stubs-service-aat.service.core-compute-aat.internal"



withNightlyPipeline(type, product, component) {
    // Vars needed for functional and smoke tests run against AKS
    env.OAUTH2_CLIENT_ID = "ccd_gateway"
    env.OAUTH2_REDIRECT_URI = "https://www-ccd.nonprod.platform.hmcts.net/oauth2redirect"
    env.IDAM_URL = "https://idam-api.aat.platform.hmcts.net"
    env.S2S_URL = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
    env.CCD_GW_SERVICE_NAME = "ccd_gw"

    loadVaultSecrets(secrets)
    enableFortifyScan()
    enableDbMigration('ccd')
    disableLegacyDeployment()
    enableMutationTest()
    enableHighLevelDataSetup()

    after('fortify-scan') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/Fortify Scan/**/*'
    }

    after('test') {
        // hmcts/cnp-jenkins-library may fail to copy artifacts after checkstyle error so repeat command (see /src/uk/gov/hmcts/contino/GradleBuilder.groovy)
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/reports/checkstyle/*.html'
    }

    enableFullFunctionalTest(200)

    after('fullFunctionalTest') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/BEFTA Report for Functional Tests/**/*'
    }
    enableSlackNotifications('#ccd-nightly-builds')
}
