apply plugin: 'com.github.spacialcircumstances.gradle-cucumber-reporting'
//apply plugin: 'info.solidsoft.pitest'
dependencies {
    compile group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '2.0.0'
    compile group: 'org.awaitility', name: 'awaitility', version: '3.1.6'
}

sourceSets {
    aat {
        java {
            srcDir('src/aat/java')
            compileClasspath += main.output
            runtimeClasspath += main.output
        }
        resources {
            srcDir('src/aat/resources')
        }
    }
}

task smoke(type: Test) {
    description = 'Executes smoke tests against the CCD Definition Store Instance just deployed'
    setTestClassesDirs(sourceSets.aat.output.classesDirs)
    setClasspath(sourceSets.aat.runtimeClasspath)
    include "uk/gov/hmcts/ccd/definitionstore/befta/**"
    useJUnitPlatform {
        includeTags 'smoke'
    }
    doLast {
        generateCucumberReports.enabled = true
        javaexec {
            main = "uk.gov.hmcts.ccd.definitionstore.befta.DefinitionStoreBeftaMain"
            classpath += configurations.cucumberRuntime + sourceSets.aat.runtimeClasspath + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', "json:${rootDir}/target/cucumber.json", '--tags', '@Smoke', '--glue',
                    'uk.gov.hmcts.befta.player', 'src/aat/resources/features']
            jvmArgs = [ '--add-opens=java.base/java.lang.reflect=ALL-UNNAMED' ]
        }
    }
}

task functional(type: Test) {
    description = 'Executes functional tests against the CCD Definition Store Instance just deployed'
    setTestClassesDirs(sourceSets.aat.output.classesDirs)
    setClasspath(sourceSets.aat.runtimeClasspath)
    include "uk/gov/hmcts/ccd/definitionstore/tests/functional/**"
    useJUnitPlatform()

    generateCucumberReports.enabled = false

    doFirst {
        generateCucumberReports.enabled = true
        javaexec {
            main = "uk.gov.hmcts.ccd.definitionstore.befta.DefinitionStoreBeftaMain"
            classpath += configurations.cucumberRuntime + sourceSets.aat.runtimeClasspath + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', "json:${rootDir}/target/cucumber.json", '--tags', 'not @Ignore', '--glue',
                    'uk.gov.hmcts.befta.player', 'src/aat/resources/features']
            jvmArgs = [ '--add-opens=java.base/java.lang.reflect=ALL-UNNAMED' ]
        }
    }
}
cucumberReports {
    outputDir = file("${rootDir}/target/cucumber")
    reports = files("${rootDir}/target/cucumber.json")
}
bootJar {
    enabled = false
}

jar {
    enabled = false
}

/*pitest {
    targetClasses = ['uk.gov.hmcts.ccd.definitionstore.befta.DefinitionStoreTestAutomationAdapter']
    excludedClasses = [
            'uk.gov.hmcts.ccd.definitionstore.befta.DefinitionStoreBeftaMain',
            'uk.gov.hmcts.ccd.definitionstore.befta.TestDataLoaderMain'
    ]
    enableDefaultIncrementalAnalysis = true
    historyInputLocation = ['build/reports/pitest/fastermutationtesting']
    historyOutputLocation = ['build/reports/pitest/fastermutationtestingoutput']
    threads = 15
    testSourceSets = [sourceSets.test]
    mainSourceSets = [sourceSets.main]
    fileExtensionsToFilter.addAll('xml','json')
    outputFormats = ['XML', 'HTML','CSV']
    mutationThreshold = 0
    coverageThreshold = 0
    maxMutationsPerClass = 15
    jvmArgs = ['-Xms1G','-Xmx3G']
    timestampedReports = false
    failWhenNoMutations = false
    detectInlinedCode = true
}*/

